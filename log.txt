==27437== Memcheck, a memory error detector
==27437== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==27437== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==27437== Command: ./build/main.bin
==27437== Parent PID: 24680
==27437== 
==27437== Thread 4 unnamedthread:
==27437== Conditional jump or move depends on uninitialised value(s)
==27437==    at 0x123B69: fei::HttpRequest::loadRequest(fei::Buffer&) (HttpRequest.cpp:20)
==27437==    by 0x117C70: fei::HttpContext::phraseRequest(fei::Buffer&) (HttpContext.h:46)
==27437==    by 0x116EB5: fei::Connection::handleRead() (Connection.cpp:38)
==27437==    by 0x11956C: void std::__invoke_impl<void, void (fei::Connection::*&)(), fei::Connection*&>(std::__invoke_memfun_deref, void (fei::Connection::*&)(), fei::Connection*&) (invoke.h:73)
==27437==    by 0x1193CD: std::__invoke_result<void (fei::Connection::*&)(), fei::Connection*&>::type std::__invoke<void (fei::Connection::*&)(), fei::Connection*&>(void (fei::Connection::*&)(), fei::Connection*&) (invoke.h:95)
==27437==    by 0x1191B6: void std::_Bind<void (fei::Connection::*(fei::Connection*))()>::__call<void, , 0ul>(std::tuple<>&&, std::_Index_tuple<0ul>) (functional:400)
==27437==    by 0x118E62: void std::_Bind<void (fei::Connection::*(fei::Connection*))()>::operator()<, void>() (functional:484)
==27437==    by 0x118A88: std::_Function_handler<void (), std::_Bind<void (fei::Connection::*(fei::Connection*))()> >::_M_invoke(std::_Any_data const&) (std_function.h:300)
==27437==    by 0x11676F: std::function<void ()>::operator()() const (std_function.h:688)
==27437==    by 0x11667D: fei::Channel::handle() (Channel.cpp:62)
==27437==    by 0x11E787: fei::EventLoop::loop() (EventLoop.cpp:98)
==27437==    by 0x120EDD: fei::EventLoopThread::threadFunc() (EventLoopThread.cpp:54)
==27437==  Uninitialised value was created by a heap allocation
==27437==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==27437==    by 0x1294D8: fei::Server::newConnection(int, fei::InetAddr&) (Server.cpp:25)
==27437==    by 0x12D920: void std::__invoke_impl<void, void (fei::Server::*&)(int, fei::InetAddr&), fei::Server*&, int, fei::InetAddr&>(std::__invoke_memfun_deref, void (fei::Server::*&)(int, fei::InetAddr&), fei::Server*&, int&&, fei::InetAddr&) (invoke.h:73)
==27437==    by 0x12D377: std::__invoke_result<void (fei::Server::*&)(int, fei::InetAddr&), fei::Server*&, int, fei::InetAddr&>::type std::__invoke<void (fei::Server::*&)(int, fei::InetAddr&), fei::Server*&, int, fei::InetAddr&>(void (fei::Server::*&)(int, fei::InetAddr&), fei::Server*&, int&&, fei::InetAddr&) (invoke.h:95)
==27437==    by 0x12C874: void std::_Bind<void (fei::Server::*(fei::Server*, std::_Placeholder<1>, std::_Placeholder<2>))(int, fei::InetAddr&)>::__call<void, int&&, fei::InetAddr&, 0ul, 1ul, 2ul>(std::tuple<int&&, fei::InetAddr&>&&, std::_Index_tuple<0ul, 1ul, 2ul>) (functional:400)
==27437==    by 0x12B88A: void std::_Bind<void (fei::Server::*(fei::Server*, std::_Placeholder<1>, std::_Placeholder<2>))(int, fei::InetAddr&)>::operator()<int, fei::InetAddr&, void>(int&&, fei::InetAddr&) (functional:484)
==27437==    by 0x12AAFF: std::_Function_handler<void (int, fei::InetAddr&), std::_Bind<void (fei::Server::*(fei::Server*, std::_Placeholder<1>, std::_Placeholder<2>))(int, fei::InetAddr&)> >::_M_invoke(std::_Any_data const&, int&&, fei::InetAddr&) (std_function.h:300)
==27437==    by 0x111299: std::function<void (int, fei::InetAddr&)>::operator()(int, fei::InetAddr&) const (std_function.h:688)
==27437==    by 0x110D2F: fei::Acceptor::handleRead() (Acceptor.cpp:31)
==27437==    by 0x1108B6: void std::__invoke_impl<void, void (fei::Acceptor::*&)(), fei::Acceptor*&>(std::__invoke_memfun_deref, void (fei::Acceptor::*&)(), fei::Acceptor*&) (invoke.h:73)
==27437==    by 0x1106F1: std::__invoke_result<void (fei::Acceptor::*&)(), fei::Acceptor*&>::type std::__invoke<void (fei::Acceptor::*&)(), fei::Acceptor*&>(void (fei::Acceptor::*&)(), fei::Acceptor*&) (invoke.h:95)
==27437==    by 0x1103F8: void std::_Bind<void (fei::Acceptor::*(fei::Acceptor*))()>::__call<void, , 0ul>(std::tuple<>&&, std::_Index_tuple<0ul>) (functional:400)
==27437== 
==27437== Conditional jump or move depends on uninitialised value(s)
==27437==    at 0x123B8D: fei::HttpRequest::loadRequest(fei::Buffer&) (HttpRequest.cpp:22)
==27437==    by 0x117C70: fei::HttpContext::phraseRequest(fei::Buffer&) (HttpContext.h:46)
==27437==    by 0x116EB5: fei::Connection::handleRead() (Connection.cpp:38)
==27437==    by 0x11956C: void std::__invoke_impl<void, void (fei::Connection::*&)(), fei::Connection*&>(std::__invoke_memfun_deref, void (fei::Connection::*&)(), fei::Connection*&) (invoke.h:73)
==27437==    by 0x1193CD: std::__invoke_result<void (fei::Connection::*&)(), fei::Connection*&>::type std::__invoke<void (fei::Connection::*&)(), fei::Connection*&>(void (fei::Connection::*&)(), fei::Connection*&) (invoke.h:95)
==27437==    by 0x1191B6: void std::_Bind<void (fei::Connection::*(fei::Connection*))()>::__call<void, , 0ul>(std::tuple<>&&, std::_Index_tuple<0ul>) (functional:400)
==27437==    by 0x118E62: void std::_Bind<void (fei::Connection::*(fei::Connection*))()>::operator()<, void>() (functional:484)
==27437==    by 0x118A88: std::_Function_handler<void (), std::_Bind<void (fei::Connection::*(fei::Connection*))()> >::_M_invoke(std::_Any_data const&) (std_function.h:300)
==27437==    by 0x11676F: std::function<void ()>::operator()() const (std_function.h:688)
==27437==    by 0x11667D: fei::Channel::handle() (Channel.cpp:62)
==27437==    by 0x11E787: fei::EventLoop::loop() (EventLoop.cpp:98)
==27437==    by 0x120EDD: fei::EventLoopThread::threadFunc() (EventLoopThread.cpp:54)
==27437==  Uninitialised value was created by a heap allocation
==27437==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==27437==    by 0x1294D8: fei::Server::newConnection(int, fei::InetAddr&) (Server.cpp:25)
==27437==    by 0x12D920: void std::__invoke_impl<void, void (fei::Server::*&)(int, fei::InetAddr&), fei::Server*&, int, fei::InetAddr&>(std::__invoke_memfun_deref, void (fei::Server::*&)(int, fei::InetAddr&), fei::Server*&, int&&, fei::InetAddr&) (invoke.h:73)
==27437==    by 0x12D377: std::__invoke_result<void (fei::Server::*&)(int, fei::InetAddr&), fei::Server*&, int, fei::InetAddr&>::type std::__invoke<void (fei::Server::*&)(int, fei::InetAddr&), fei::Server*&, int, fei::InetAddr&>(void (fei::Server::*&)(int, fei::InetAddr&), fei::Server*&, int&&, fei::InetAddr&) (invoke.h:95)
==27437==    by 0x12C874: void std::_Bind<void (fei::Server::*(fei::Server*, std::_Placeholder<1>, std::_Placeholder<2>))(int, fei::InetAddr&)>::__call<void, int&&, fei::InetAddr&, 0ul, 1ul, 2ul>(std::tuple<int&&, fei::InetAddr&>&&, std::_Index_tuple<0ul, 1ul, 2ul>) (functional:400)
==27437==    by 0x12B88A: void std::_Bind<void (fei::Server::*(fei::Server*, std::_Placeholder<1>, std::_Placeholder<2>))(int, fei::InetAddr&)>::operator()<int, fei::InetAddr&, void>(int&&, fei::InetAddr&) (functional:484)
==27437==    by 0x12AAFF: std::_Function_handler<void (int, fei::InetAddr&), std::_Bind<void (fei::Server::*(fei::Server*, std::_Placeholder<1>, std::_Placeholder<2>))(int, fei::InetAddr&)> >::_M_invoke(std::_Any_data const&, int&&, fei::InetAddr&) (std_function.h:300)
==27437==    by 0x111299: std::function<void (int, fei::InetAddr&)>::operator()(int, fei::InetAddr&) const (std_function.h:688)
==27437==    by 0x110D2F: fei::Acceptor::handleRead() (Acceptor.cpp:31)
==27437==    by 0x1108B6: void std::__invoke_impl<void, void (fei::Acceptor::*&)(), fei::Acceptor*&>(std::__invoke_memfun_deref, void (fei::Acceptor::*&)(), fei::Acceptor*&) (invoke.h:73)
==27437==    by 0x1106F1: std::__invoke_result<void (fei::Acceptor::*&)(), fei::Acceptor*&>::type std::__invoke<void (fei::Acceptor::*&)(), fei::Acceptor*&>(void (fei::Acceptor::*&)(), fei::Acceptor*&) (invoke.h:95)
==27437==    by 0x1103F8: void std::_Bind<void (fei::Acceptor::*(fei::Acceptor*))()>::__call<void, , 0ul>(std::tuple<>&&, std::_Index_tuple<0ul>) (functional:400)
==27437== 
==27437== Syscall param read(buf) points to unaddressable byte(s)
==27437==    at 0x4B8F22C: __libc_read (read.c:26)
==27437==    by 0x4B8F22C: read (read.c:24)
==27437==    by 0x4B10307: _IO_file_xsgetn (fileops.c:1342)
==27437==    by 0x4B03EE2: fread (iofread.c:38)
==27437==    by 0x12673D: fei::HttpResponse::setMessageBody() (HttpResponse.cpp:73)
==27437==    by 0x117858: fei::HttpResponse::phraseRequest(fei::HttpRequest&) (HttpResponse.h:39)
==27437==    by 0x117C8A: fei::HttpContext::phraseRequest(fei::Buffer&) (HttpContext.h:47)
==27437==    by 0x116EB5: fei::Connection::handleRead() (Connection.cpp:38)
==27437==    by 0x11956C: void std::__invoke_impl<void, void (fei::Connection::*&)(), fei::Connection*&>(std::__invoke_memfun_deref, void (fei::Connection::*&)(), fei::Connection*&) (invoke.h:73)
==27437==    by 0x1193CD: std::__invoke_result<void (fei::Connection::*&)(), fei::Connection*&>::type std::__invoke<void (fei::Connection::*&)(), fei::Connection*&>(void (fei::Connection::*&)(), fei::Connection*&) (invoke.h:95)
==27437==    by 0x1191B6: void std::_Bind<void (fei::Connection::*(fei::Connection*))()>::__call<void, , 0ul>(std::tuple<>&&, std::_Index_tuple<0ul>) (functional:400)
==27437==    by 0x118E62: void std::_Bind<void (fei::Connection::*(fei::Connection*))()>::operator()<, void>() (functional:484)
==27437==    by 0x118A88: std::_Function_handler<void (), std::_Bind<void (fei::Connection::*(fei::Connection*))()> >::_M_invoke(std::_Any_data const&) (std_function.h:300)
==27437==  Address 0x55c06a2 is 0 bytes after a block of size 1,010 alloc'd
==27437==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==27437==    by 0x126704: fei::HttpResponse::setMessageBody() (HttpResponse.cpp:72)
==27437==    by 0x117858: fei::HttpResponse::phraseRequest(fei::HttpRequest&) (HttpResponse.h:39)
==27437==    by 0x117C8A: fei::HttpContext::phraseRequest(fei::Buffer&) (HttpContext.h:47)
==27437==    by 0x116EB5: fei::Connection::handleRead() (Connection.cpp:38)
==27437==    by 0x11956C: void std::__invoke_impl<void, void (fei::Connection::*&)(), fei::Connection*&>(std::__invoke_memfun_deref, void (fei::Connection::*&)(), fei::Connection*&) (invoke.h:73)
==27437==    by 0x1193CD: std::__invoke_result<void (fei::Connection::*&)(), fei::Connection*&>::type std::__invoke<void (fei::Connection::*&)(), fei::Connection*&>(void (fei::Connection::*&)(), fei::Connection*&) (invoke.h:95)
==27437==    by 0x1191B6: void std::_Bind<void (fei::Connection::*(fei::Connection*))()>::__call<void, , 0ul>(std::tuple<>&&, std::_Index_tuple<0ul>) (functional:400)
==27437==    by 0x118E62: void std::_Bind<void (fei::Connection::*(fei::Connection*))()>::operator()<, void>() (functional:484)
==27437==    by 0x118A88: std::_Function_handler<void (), std::_Bind<void (fei::Connection::*(fei::Connection*))()> >::_M_invoke(std::_Any_data const&) (std_function.h:300)
==27437==    by 0x11676F: std::function<void ()>::operator()() const (std_function.h:688)
==27437==    by 0x11667D: fei::Channel::handle() (Channel.cpp:62)
==27437== 
==27437== Conditional jump or move depends on uninitialised value(s)
==27437==    at 0x11798B: fei::HttpResponse::addVersion(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (HttpResponse.h:71)
==27437==    by 0x1178D8: fei::HttpResponse::getResponse[abi:cxx11]() (HttpResponse.h:45)
==27437==    by 0x117CCA: fei::HttpContext::getResponse[abi:cxx11]() (HttpContext.h:52)
==27437==    by 0x116ECF: fei::Connection::handleRead() (Connection.cpp:39)
==27437==    by 0x11956C: void std::__invoke_impl<void, void (fei::Connection::*&)(), fei::Connection*&>(std::__invoke_memfun_deref, void (fei::Connection::*&)(), fei::Connection*&) (invoke.h:73)
==27437==    by 0x1193CD: std::__invoke_result<void (fei::Connection::*&)(), fei::Connection*&>::type std::__invoke<void (fei::Connection::*&)(), fei::Connection*&>(void (fei::Connection::*&)(), fei::Connection*&) (invoke.h:95)
==27437==    by 0x1191B6: void std::_Bind<void (fei::Connection::*(fei::Connection*))()>::__call<void, , 0ul>(std::tuple<>&&, std::_Index_tuple<0ul>) (functional:400)
==27437==    by 0x118E62: void std::_Bind<void (fei::Connection::*(fei::Connection*))()>::operator()<, void>() (functional:484)
==27437==    by 0x118A88: std::_Function_handler<void (), std::_Bind<void (fei::Connection::*(fei::Connection*))()> >::_M_invoke(std::_Any_data const&) (std_function.h:300)
==27437==    by 0x11676F: std::function<void ()>::operator()() const (std_function.h:688)
==27437==    by 0x11667D: fei::Channel::handle() (Channel.cpp:62)
==27437==    by 0x11E787: fei::EventLoop::loop() (EventLoop.cpp:98)
==27437==  Uninitialised value was created by a heap allocation
==27437==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==27437==    by 0x1294D8: fei::Server::newConnection(int, fei::InetAddr&) (Server.cpp:25)
==27437==    by 0x12D920: void std::__invoke_impl<void, void (fei::Server::*&)(int, fei::InetAddr&), fei::Server*&, int, fei::InetAddr&>(std::__invoke_memfun_deref, void (fei::Server::*&)(int, fei::InetAddr&), fei::Server*&, int&&, fei::InetAddr&) (invoke.h:73)
==27437==    by 0x12D377: std::__invoke_result<void (fei::Server::*&)(int, fei::InetAddr&), fei::Server*&, int, fei::InetAddr&>::type std::__invoke<void (fei::Server::*&)(int, fei::InetAddr&), fei::Server*&, int, fei::InetAddr&>(void (fei::Server::*&)(int, fei::InetAddr&), fei::Server*&, int&&, fei::InetAddr&) (invoke.h:95)
==27437==    by 0x12C874: void std::_Bind<void (fei::Server::*(fei::Server*, std::_Placeholder<1>, std::_Placeholder<2>))(int, fei::InetAddr&)>::__call<void, int&&, fei::InetAddr&, 0ul, 1ul, 2ul>(std::tuple<int&&, fei::InetAddr&>&&, std::_Index_tuple<0ul, 1ul, 2ul>) (functional:400)
==27437==    by 0x12B88A: void std::_Bind<void (fei::Server::*(fei::Server*, std::_Placeholder<1>, std::_Placeholder<2>))(int, fei::InetAddr&)>::operator()<int, fei::InetAddr&, void>(int&&, fei::InetAddr&) (functional:484)
==27437==    by 0x12AAFF: std::_Function_handler<void (int, fei::InetAddr&), std::_Bind<void (fei::Server::*(fei::Server*, std::_Placeholder<1>, std::_Placeholder<2>))(int, fei::InetAddr&)> >::_M_invoke(std::_Any_data const&, int&&, fei::InetAddr&) (std_function.h:300)
==27437==    by 0x111299: std::function<void (int, fei::InetAddr&)>::operator()(int, fei::InetAddr&) const (std_function.h:688)
==27437==    by 0x110D2F: fei::Acceptor::handleRead() (Acceptor.cpp:31)
==27437==    by 0x1108B6: void std::__invoke_impl<void, void (fei::Acceptor::*&)(), fei::Acceptor*&>(std::__invoke_memfun_deref, void (fei::Acceptor::*&)(), fei::Acceptor*&) (invoke.h:73)
==27437==    by 0x1106F1: std::__invoke_result<void (fei::Acceptor::*&)(), fei::Acceptor*&>::type std::__invoke<void (fei::Acceptor::*&)(), fei::Acceptor*&>(void (fei::Acceptor::*&)(), fei::Acceptor*&) (invoke.h:95)
==27437==    by 0x1103F8: void std::_Bind<void (fei::Acceptor::*(fei::Acceptor*))()>::__call<void, , 0ul>(std::tuple<>&&, std::_Index_tuple<0ul>) (functional:400)
==27437== 
==27437== 
==27437== Process terminating with default action of signal 2 (SIGINT)
==27437==    at 0x4BA068E: epoll_wait (epoll_wait.c:30)
==27437==    by 0x119A3C: fei::Epoll::epoll(std::vector<fei::Channel*, std::allocator<fei::Channel*> >*) (Epoll.cpp:20)
==27437==    by 0x11E73D: fei::EventLoop::loop() (EventLoop.cpp:94)
==27437==    by 0x10E54E: main (main.cpp:141)
==27437== 
==27437== HEAP SUMMARY:
==27437==     in use at exit: 16,782,772 bytes in 16,510 blocks
==27437==   total heap usage: 126,895 allocs, 110,385 frees, 53,008,048 bytes allocated
==27437== 
==27437== Thread 1:
==27437== 304 bytes in 1 blocks are possibly lost in loss record 24 of 53
==27437==    at 0x483DD99: calloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==27437==    by 0x40149DA: allocate_dtv (dl-tls.c:286)
==27437==    by 0x40149DA: _dl_allocate_tls (dl-tls.c:532)
==27437==    by 0x4A67322: allocate_stack (allocatestack.c:622)
==27437==    by 0x4A67322: pthread_create@@GLIBC_2.2.5 (pthread_create.c:660)
==27437==    by 0x12E7FA: fei::Thread::start() (Thread.cpp:122)
==27437==    by 0x10EAB6: fei::AsyncLogging::start() (AsyncLogging.h:52)
==27437==    by 0x10E44D: main (main.cpp:130)
==27437== 
==27437== 3,040 bytes in 10 blocks are possibly lost in loss record 35 of 53
==27437==    at 0x483DD99: calloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==27437==    by 0x40149DA: allocate_dtv (dl-tls.c:286)
==27437==    by 0x40149DA: _dl_allocate_tls (dl-tls.c:532)
==27437==    by 0x4A67322: allocate_stack (allocatestack.c:622)
==27437==    by 0x4A67322: pthread_create@@GLIBC_2.2.5 (pthread_create.c:660)
==27437==    by 0x12E7FA: fei::Thread::start() (Thread.cpp:122)
==27437==    by 0x120D8D: fei::EventLoopThread::startLoop() (EventLoopThread.cpp:27)
==27437==    by 0x12193E: fei::EventLoopThreadPool::start(std::function<void (fei::EventLoop*)> const&) (EventLoopThreadPool.cpp:25)
==27437==    by 0x10EC63: fei::Server::start() (Server.h:35)
==27437==    by 0x10E53F: main (main.cpp:139)
==27437== 
==27437== 10,888 bytes in 2,722 blocks are definitely lost in loss record 41 of 53
==27437==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==27437==    by 0x11680B: fei::Connection::Connection(fei::EventLoop*, int, fei::InetAddr&, fei::InetAddr&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (Connection.cpp:6)
==27437==    by 0x12950B: fei::Server::newConnection(int, fei::InetAddr&) (Server.cpp:25)
==27437==    by 0x12D920: void std::__invoke_impl<void, void (fei::Server::*&)(int, fei::InetAddr&), fei::Server*&, int, fei::InetAddr&>(std::__invoke_memfun_deref, void (fei::Server::*&)(int, fei::InetAddr&), fei::Server*&, int&&, fei::InetAddr&) (invoke.h:73)
==27437==    by 0x12D377: std::__invoke_result<void (fei::Server::*&)(int, fei::InetAddr&), fei::Server*&, int, fei::InetAddr&>::type std::__invoke<void (fei::Server::*&)(int, fei::InetAddr&), fei::Server*&, int, fei::InetAddr&>(void (fei::Server::*&)(int, fei::InetAddr&), fei::Server*&, int&&, fei::InetAddr&) (invoke.h:95)
==27437==    by 0x12C874: void std::_Bind<void (fei::Server::*(fei::Server*, std::_Placeholder<1>, std::_Placeholder<2>))(int, fei::InetAddr&)>::__call<void, int&&, fei::InetAddr&, 0ul, 1ul, 2ul>(std::tuple<int&&, fei::InetAddr&>&&, std::_Index_tuple<0ul, 1ul, 2ul>) (functional:400)
==27437==    by 0x12B88A: void std::_Bind<void (fei::Server::*(fei::Server*, std::_Placeholder<1>, std::_Placeholder<2>))(int, fei::InetAddr&)>::operator()<int, fei::InetAddr&, void>(int&&, fei::InetAddr&) (functional:484)
==27437==    by 0x12AAFF: std::_Function_handler<void (int, fei::InetAddr&), std::_Bind<void (fei::Server::*(fei::Server*, std::_Placeholder<1>, std::_Placeholder<2>))(int, fei::InetAddr&)> >::_M_invoke(std::_Any_data const&, int&&, fei::InetAddr&) (std_function.h:300)
==27437==    by 0x111299: std::function<void (int, fei::InetAddr&)>::operator()(int, fei::InetAddr&) const (std_function.h:688)
==27437==    by 0x110D2F: fei::Acceptor::handleRead() (Acceptor.cpp:31)
==27437==    by 0x1108B6: void std::__invoke_impl<void, void (fei::Acceptor::*&)(), fei::Acceptor*&>(std::__invoke_memfun_deref, void (fei::Acceptor::*&)(), fei::Acceptor*&) (invoke.h:73)
==27437==    by 0x1106F1: std::__invoke_result<void (fei::Acceptor::*&)(), fei::Acceptor*&>::type std::__invoke<void (fei::Acceptor::*&)(), fei::Acceptor*&>(void (fei::Acceptor::*&)(), fei::Acceptor*&) (invoke.h:95)
==27437== 
==27437== 635,624 (387,448 direct, 248,176 indirect) bytes in 2,549 blocks are definitely lost in loss record 49 of 53
==27437==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==27437==    by 0x116833: fei::Connection::Connection(fei::EventLoop*, int, fei::InetAddr&, fei::InetAddr&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (Connection.cpp:7)
==27437==    by 0x12950B: fei::Server::newConnection(int, fei::InetAddr&) (Server.cpp:25)
==27437==    by 0x12D920: void std::__invoke_impl<void, void (fei::Server::*&)(int, fei::InetAddr&), fei::Server*&, int, fei::InetAddr&>(std::__invoke_memfun_deref, void (fei::Server::*&)(int, fei::InetAddr&), fei::Server*&, int&&, fei::InetAddr&) (invoke.h:73)
==27437==    by 0x12D377: std::__invoke_result<void (fei::Server::*&)(int, fei::InetAddr&), fei::Server*&, int, fei::InetAddr&>::type std::__invoke<void (fei::Server::*&)(int, fei::InetAddr&), fei::Server*&, int, fei::InetAddr&>(void (fei::Server::*&)(int, fei::InetAddr&), fei::Server*&, int&&, fei::InetAddr&) (invoke.h:95)
==27437==    by 0x12C874: void std::_Bind<void (fei::Server::*(fei::Server*, std::_Placeholder<1>, std::_Placeholder<2>))(int, fei::InetAddr&)>::__call<void, int&&, fei::InetAddr&, 0ul, 1ul, 2ul>(std::tuple<int&&, fei::InetAddr&>&&, std::_Index_tuple<0ul, 1ul, 2ul>) (functional:400)
==27437==    by 0x12B88A: void std::_Bind<void (fei::Server::*(fei::Server*, std::_Placeholder<1>, std::_Placeholder<2>))(int, fei::InetAddr&)>::operator()<int, fei::InetAddr&, void>(int&&, fei::InetAddr&) (functional:484)
==27437==    by 0x12AAFF: std::_Function_handler<void (int, fei::InetAddr&), std::_Bind<void (fei::Server::*(fei::Server*, std::_Placeholder<1>, std::_Placeholder<2>))(int, fei::InetAddr&)> >::_M_invoke(std::_Any_data const&, int&&, fei::InetAddr&) (std_function.h:300)
==27437==    by 0x111299: std::function<void (int, fei::InetAddr&)>::operator()(int, fei::InetAddr&) const (std_function.h:688)
==27437==    by 0x110D2F: fei::Acceptor::handleRead() (Acceptor.cpp:31)
==27437==    by 0x1108B6: void std::__invoke_impl<void, void (fei::Acceptor::*&)(), fei::Acceptor*&>(std::__invoke_memfun_deref, void (fei::Acceptor::*&)(), fei::Acceptor*&) (invoke.h:73)
==27437==    by 0x1106F1: std::__invoke_result<void (fei::Acceptor::*&)(), fei::Acceptor*&>::type std::__invoke<void (fei::Acceptor::*&)(), fei::Acceptor*&>(void (fei::Acceptor::*&)(), fei::Acceptor*&) (invoke.h:95)
==27437== 
==27437== LEAK SUMMARY:
==27437==    definitely lost: 398,336 bytes in 5,271 blocks
==27437==    indirectly lost: 248,176 bytes in 10,266 blocks
==27437==      possibly lost: 3,344 bytes in 11 blocks
==27437==    still reachable: 16,132,916 bytes in 962 blocks
==27437==         suppressed: 0 bytes in 0 blocks
==27437== Reachable blocks (those to which a pointer was found) are not shown.
==27437== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==27437== 
==27437== For lists of detected and suppressed errors, rerun with: -s
==27437== ERROR SUMMARY: 13609 errors from 8 contexts (suppressed: 0 from 0)
